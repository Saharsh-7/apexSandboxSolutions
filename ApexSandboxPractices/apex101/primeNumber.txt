public Boolean isPrime(Integer num) {

    /*
    A prime number is a number greater than 1 that is not evenly divisible by any number greater than one and smaller than itself. For example, 13 is a prime number because it is not evenly divisible by any number between 1 and 13.

Implement the function isPrime that takes as input an integer greater than 1, returns true if the integer is a prime number, and returns false otherwise. Assume that the input will always be greater than 1.

isPrime(10) = false. 10 is not a prime number because it is evenly divisible by 2 and 5.

isPrime(23) = true. 23 is a prime number because it is not evenly divisible by any number from 2 to 22.


    */
    //code here

   if (num == 2) {
       return true;
   } else if (Math.mod(num,2) == 0) {
       return false;
   } else {
       for (Integer i = 3; i * i <= num; i += 2) {
           if (Math.mod(num,i) == 0) {
               return false;
           }
       }

       return true;
   }
}